@page "/ladder"
@using System.Globalization;
@using DSmm.Repositories;
@using  dsmm_server.Data;
@using dsweb_electron6.Data;
@inject IMMrepositoryNG _mm
@inject StartUp _startUp

<h3>Ladder</h3>
<br />
<div class="row">
    <div class="jumbotron" style="max-width: 600px;">
        Every Week on Friday or Saturday we try to play some 'serious' DS-Commander games at ~10 p.m. GMT. Teams/Matchups are generated with the <a href="https://trueskill.org/">Trueskill</a> algorithm from Microsoft.
        More information is available on <a href="https://discord.gg/h7CVHv">DS Discord</a> # league-info – feel free to join and participate :)
    </div>
    <div class="jumbotron ml-3" style="max-width: 600px;">
        EXP => rating exposure <br />
        MU => the mean. <br />
        SIGMA => the standard deviation <br />
        Detailed explanation: <a href="https://trueskill.org/">Trueskill</a>
    </div>

</div>
<br />
<button class="btn btn-primary" @onclick="GetLadder">Refresh</button>
<div class="container">
    <form class="form-inline ml-4">
        <div class="form-group mr-2">
            <div class="d-flex flex-column">
                <label for="semode" class="control-label">
                    Mode:
                </label>
                <div>
                    <select id="semode" class="form-control" @bind="@Mode">
                        <option selected="selected">Commander</option>
                        <option>Standard</option>
                    </select>
                    <select id="semode2" class="form-control" @bind="@Mode2">
                        <option selected="selected">3v3</option>
                        <option>2v2</option>
                        <option>1v1</option>
                    </select>
                </div>
                <div class="form-group mr-2">
                    <input type="checkbox" checked="@isLadder" />
                    <button type="button" class="btn btn-sm btn-primary" data-toggle="tooltip" data-placement="top" @onclick="@LadderClick" title="Ladder games.">
                        Ladder
                    </button>
                </div>
            </div>
        </div>
    </form>
    <div class="row">
        <div>
            <h3>Player</h3>
            <table class="table table-sm table-hover table-dark">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Name</th>
                        <th scope="col">Exp</th>
                        <th scope="col">MU</th>
                        <th scope="col">Sigma</th>
                        <th scope="col">Games</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="d-none">@(i = 1);</tr>
                    @foreach (var ent in _startUp.MMplayers.Values.OrderByDescending(o => o.Rating[Mode + Mode2 + isLadder].EXP))
                    {
                        @if (@ent.Rating[Mode + Mode2 + isLadder].Games == 0)
                        {
                            continue;
                        }
                        <tr>
                            <td>@(i++)</td>
                            <td>@ent.Name</td>
                            <td>@Math.Round(ent.Rating[Mode + Mode2 + isLadder].EXP, 2)</td>
                            <td>@Math.Round(ent.Rating[Mode + Mode2 + isLadder].MU, 2)</td>
                            <td>@Math.Round(ent.Rating[Mode + Mode2 + isLadder].SIGMA, 2)</td>
                            <td>@ent.Rating[Mode + Mode2 + isLadder].Games</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="ml-3">
            <h3>Commander</h3>
            <table class="table table-sm table-hover table-dark">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Name</th>
                        <th scope="col">Exp</th>
                        <th scope="col">MU</th>
                        <th scope="col">Sigma</th>
                        <th scope="col">Games</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="d-none">@(j = 1);</tr>
                    @foreach (var ent in _startUp.MMraces.Values.OrderByDescending(o => o.Rating[Mode + Mode2 + isLadder].EXP))
                    {
                        @if (Mode == "Commander" && DSdata.s_races_std.Contains(ent.Name))
                        {
                            continue;
                        } else if (Mode == "Standard" && !DSdata.s_races_std.Contains(ent.Name))
                        {
                            continue;
                        }
                        <tr>
                            <td>@(j++)</td>
                            <td>@ent.Name</td>
                            <td>@Math.Round(ent.Rating[Mode + Mode2 + isLadder].EXP, 2)</td>
                            <td>@Math.Round(ent.Rating[Mode + Mode2 + isLadder].MU, 2)</td>
                            <td>@Math.Round(ent.Rating[Mode + Mode2 + isLadder].SIGMA, 2)</td>
                            <td>@ent.Rating[Mode + Mode2 + isLadder].Games</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<br />

@code {
    int i = 1;
    int j = 1;
    int k = 1;
    string Mode = "Commander";
    string Mode2 = "3v3";
    bool isLadder = true;
    string Lobby;

    protected override async Task OnInitAsync()
    {
        CultureInfo.CurrentCulture = CultureInfo.CreateSpecificCulture("en-US");
        Lobby = Mode + Mode2 + Lobby;
        //await _mm.GetLadder();
    }

    void LadderClick()
    {
        isLadder = !isLadder;
    }

    async Task GetLadder()
    {
        i = 1;
        j = 1;
        StateHasChanged();
    }

}
